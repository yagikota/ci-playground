name: date time check of migration files
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
      - closed
    # paths:
    #   - 'migrations/**'

jobs:
  # 1. developブランチから最新のmigrationファイルの作成日時を取得
  latest_migration_file:
    runs-on: ubuntu-latest
    outputs:
      file_name: ${{ steps.latest_migration_file.outputs.file_name }}
      date_time: ${{ steps.latest_migration_file.outputs.date_time }}
    steps:
      - name: Checkout base branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref }} # PR先のブランチをチェックアウト
      - name: Get the date time of latest migration file date time
        id: latest_migration_file
        run: |
          echo "file_name=$(ls migrations | tail -n 1)" >> $GITHUB_OUTPUT
          echo "date_time=$(ls migrations | tail -n 1 | cut -d '-' -f1)" >> $GITHUB_OUTPUT
  # 2. 作成したmigrationファイル名が適切か判定
  check_date_time_constraints:
    runs-on: ubuntu-latest
    needs: latest_migration_file
    steps:
      - name: Switch to pull request branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - name: Fetch base branch
        run: git fetch origin ${{ github.base_ref }}
      # 作成したmigrationファイルの内、最も古いものと最新のものを取得
      - name: Get the date time of the oldest and newest migration files created.
        id: added_migration_files
        run: |
          echo "oldest_date_time=$(git diff origin/${{ github.base_ref }} ${{ github.head_ref }} --name-only --relative=migrations '***.sql' | head -n 1 | cut -d '-' -f1)" >> $GITHUB_OUTPUT
          echo "newest_date_time=$(git diff origin/${{ github.base_ref }} ${{ github.head_ref }} --name-only --relative=migrations '***.sql' | tail -n 1 | cut -d '-' -f1)" >> $GITHUB_OUTPUT
      - name: Set future limit
        env:
          TZ: "Asia/Tokyo"
        id: date
        # 追加したmigrationファイルの作成日時が当日以内であれば許容する
        run: echo "future_limit=$(date '+%Y%m%d235959')" >> $GITHUB_OUTPUT
      - name: Compare date time
        run: |
          echo "Latest migration file:
          ${{needs.latest_migration_file.outputs.file_name}}"
          echo "Added migration files:
          $(git diff origin/${{ github.base_ref }} ${{ github.head_ref }} --name-only --relative=migrations '***.sql')"
          if [ ${{needs.latest_migration_file.outputs.date_time}} \< ${{steps.added_migration_files.outputs.oldest_date_time}} ] && [ ${{steps.added_migration_files.outputs.newest_date_time}} \< ${{steps.date.outputs.future_limit}} ]; then
            echo "The name of added migration files is correct."
          else
            echo "
            The name of added migration files is not correct.
            The date time of added migration file must meet the following requirements:
              - It should be in the future compared to date time of the existing file.
              - It should be today's date time.
            So, it should be greater than ${{needs.latest_migration_file.outputs.date_time}} and less than or equal to ${{steps.date.outputs.future_limit}}."
            exit 1
          fi
