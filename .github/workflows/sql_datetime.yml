name: sql datetime check
on:
  # push:
    # branches:
    #   - main
    # paths:
    #   - "migrations/**"
  pull_request:
    # paths:
    #   - "migrations/**"

jobs:
  # 1. mainブランチから最新のmigrationファイルの名前を取得
  check_latest:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.latest_sql_file.outputs.latest_sql_file }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref }} # PR先のブランチをチェックアウト
      - name: Get latest SQL file
        id: latest_sql_file
        run: |
          echo "latest_sql_file=$(ls migrations | tail -n 1)" >> $GITHUB_OUTPUT
      - name: Echo latest SQL file
        run: |
          echo "${{steps.latest_sql_file.outputs.latest_sql_file}}"

# 2. 作成したmigrationファイル名が1で取得した最新のmigrationファイル名よりも後になっているか確認
  check_diff:
    runs-on: ubuntu-latest
    needs: check_latest
    steps:
      - uses: actions/checkout@v3
      - name: oldest added sql file
        id: oldest_added_sql_file
        run: |
          echo "added_sql_file=$(git diff origin/main --name-only -- '***.sql' | head -n 1)" >> $GITHUB_OUTPUT
      - name: Compare sql files
        run: |
          echo "oldest added sql file"
          echo "${{steps.oldest_added_sql_file.outputs.added_sql_file}}"
          echo "latest SQL file"
          echo "${{needs.check_latest.outputs.output1}}"
          if [ ${{needs.check_latest.outputs.output1}} < ${{steps.oldest_added_sql_file.outputs.added_sql_file}} ]; then
            echo "Added SQL file is latest."
          else
            echo "Added SQL file is NOT latest."
            exit 1
          fi
